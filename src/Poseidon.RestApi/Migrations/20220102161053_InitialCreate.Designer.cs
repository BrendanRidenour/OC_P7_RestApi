// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Poseidon.RestApi.Data;

#nullable disable

namespace Poseidon.RestApi.Migrations
{
    [DbContext(typeof(PoseidonDbContext))]
    [Migration("20220102161053_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Poseidon.RestApi.Bids.BidEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BidListId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 100L, 1);

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("account");

                    b.Property<double?>("Ask")
                        .HasColumnType("float")
                        .HasColumnName("ask");

                    b.Property<double?>("AskQuantity")
                        .HasColumnType("float")
                        .HasColumnName("askQuantity");

                    b.Property<string>("Benchmark")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("benchmark");

                    b.Property<double?>("Bid")
                        .HasColumnType("float")
                        .HasColumnName("bid");

                    b.Property<DateTimeOffset?>("BidListDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("bidListDate");

                    b.Property<double?>("BidQuantity")
                        .HasColumnType("float")
                        .HasColumnName("bidQuantity");

                    b.Property<string>("Book")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("book");

                    b.Property<string>("Commentary")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("commentary");

                    b.Property<DateTimeOffset?>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("creationDate");

                    b.Property<string>("CreationName")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("creationName");

                    b.Property<string>("DealName")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("dealName");

                    b.Property<string>("DealType")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("dealType");

                    b.Property<DateTimeOffset?>("RevisionDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("revisionDate");

                    b.Property<string>("RevisionName")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("revisionName");

                    b.Property<string>("Security")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("security");

                    b.Property<string>("Side")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("side");

                    b.Property<string>("SourceListId")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("sourceListId");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("status");

                    b.Property<string>("Trader")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("trader");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("BidList", (string)null);
                });

            modelBuilder.Entity("Poseidon.RestApi.CurvePoints.CurvePointEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 100L, 1);

                    b.Property<DateTimeOffset?>("AsOfDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("asOfDate");

                    b.Property<DateTimeOffset?>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("creationDate");

                    b.Property<int?>("CurveId")
                        .HasColumnType("int");

                    b.Property<double?>("Term")
                        .HasColumnType("float")
                        .HasColumnName("term");

                    b.Property<double?>("Value")
                        .HasColumnType("float")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("CurvePoint", (string)null);
                });

            modelBuilder.Entity("Poseidon.RestApi.Ratings.RatingEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 100L, 1);

                    b.Property<string>("FitchRating")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("fitchRating");

                    b.Property<string>("MoodysRating")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("moodysRating");

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("int")
                        .HasColumnName("orderNumber");

                    b.Property<string>("SandPRating")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("sandPRating");

                    b.HasKey("Id");

                    b.ToTable("Rating", (string)null);
                });

            modelBuilder.Entity("Poseidon.RestApi.Rules.RuleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 100L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("description");

                    b.Property<string>("Json")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("json");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("name");

                    b.Property<string>("SqlPart")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("sqlPart");

                    b.Property<string>("SqlStr")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("sqlStr");

                    b.Property<string>("Template")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("template");

                    b.HasKey("Id");

                    b.ToTable("RuleName", (string)null);
                });

            modelBuilder.Entity("Poseidon.RestApi.Trades.TradeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TradeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 100L, 1);

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("account");

                    b.Property<string>("Benchmark")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("benchmark");

                    b.Property<string>("Book")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("book");

                    b.Property<double?>("BuyPrice")
                        .HasColumnType("float")
                        .HasColumnName("buyPrice");

                    b.Property<double?>("BuyQuantity")
                        .HasColumnType("float")
                        .HasColumnName("buyQuantity");

                    b.Property<DateTimeOffset?>("CreationDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("creationDate");

                    b.Property<string>("CreationName")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("creationName");

                    b.Property<string>("DealName")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("dealName");

                    b.Property<string>("DealType")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("dealType");

                    b.Property<DateTimeOffset?>("RevisionDate")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("revisionDate");

                    b.Property<string>("RevisionName")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("revisionName");

                    b.Property<string>("Security")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("security");

                    b.Property<double?>("SellPrice")
                        .HasColumnType("float")
                        .HasColumnName("sellPrice");

                    b.Property<double?>("SellQuantity")
                        .HasColumnType("float")
                        .HasColumnName("sellQuantity");

                    b.Property<string>("Side")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("side");

                    b.Property<string>("SourceListId")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("sourceListId");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("status");

                    b.Property<DateTimeOffset?>("TradeDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Trader")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("trader");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("Trade", (string)null);
                });

            modelBuilder.Entity("Poseidon.RestApi.Users.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 100L, 1);

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("fullname");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
